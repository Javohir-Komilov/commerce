package templates

import (
    "commerce/db"
    "fmt"
)

templ Index(listings []db.Listing) {
    @Base("Commerce") {
        <div class="container mt-4">
            <h1 class="mb-4">Active Listings</h1>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                for _, listing := range listings {
                    if listing.Active.Bool {
                        @ListingItem(listing)
                    }
                }
            </div>
        </div>
    }
}

templ ListingItem(listing db.Listing) {
    <div class="col">
        <div class="card h-100 shadow-sm">
            if listing.ImageUrl != "" {
                <img src={ listing.ImageUrl } class="card-img-top" alt={ listing.Title } style="height: 200px; object-fit: cover;"/>
            } else {
                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                    <span class="text-muted">No image available</span>
                </div>
            }
            <div class="card-body">
                <h5 class="card-title">
                    <a href={ templ.URL("/listing/" + fmt.Sprintf("%d", listing.ID)) } class="text-decoration-none">{ listing.Title }</a>
                </h5>
                <h6 class="card-subtitle mb-2 text-muted">{ fmt.Sprintf("$%.02f", listing.StartingPrice) }</h6>
                if listing.Description.Valid {
                    <p class="card-text">{ truncateDescription(listing.Description.String, 100) }</p>
                }
            </div>
            <div class="card-footer text-muted">
                <small>Created { listing.CreatedAt.Time.Format("Jan 02, 2006, 3:04 PM") }</small>
            </div>
        </div>
    </div>
}

func truncateDescription(description string, maxLength int) string {
    if len(description) <= maxLength {
        return description
    }
    return description[:maxLength] + "..."
}